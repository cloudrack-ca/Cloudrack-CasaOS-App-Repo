services:
  flarum:
    container_name: flarum  # Name of the container (this is the name that will be used to access the container)
    environment:  # Environment variables (this is the application configuration)
      - DB_HOST=mariadb  # Database host (this is the hostname or IP address of the database container)
      - DB_NAME=flarum  # Database name (this is the name of the database that will be used by the application)
      - DB_PASS=db-password  # Database password (this is the password that will be used to access the database)
      - DB_PORT=3306  # Database port (this is the port that will be used to access the database)
      - DB_PREF=flarum_  # Database prefix (this is the prefix that will be used for the database tables)
      - DB_USER=flarum  # Database user (this is the user that will be used to access the database)
      - FLARUM_ADMIN_MAIL=admin@example.com  # Flarum admin email (this is the email address of the Flarum administrator)
      - FLARUM_ADMIN_PASS=12345678  # Flarum admin password (this is the password of the Flarum administrator)
      - FLARUM_ADMIN_USER=admin  # Flarum admin username (this is the username of the Flarum administrator)
      - FLARUM_TITLE=Flarum Dockerized  # Flarum title (this is the title of the Flarum forum)
      - FORUM_URL=http://10.0.0.202  # Forum URL (this is the URL of the Flarum forum)
    image: mondedie/flarum:latest  # Image to use (this is the image that will be used to create the container)
    ports:  # Ports to expose (this defines ports for the container)
      - target: 8888  # Port inside the container (this is the port that will be used to access the application inside the container)
        published: "80"  # Port on the host (this is the port that will be used to access the application outside the container)
        protocol: tcp  # Protocol TCP or UDP (TCP is default) for UDP add :udp to the end of the port
    restart: unless-stopped  # Restart policy (this is how the container will restart if it crashes)
    volumes:  # Volumes to mount (these are needed to store the application data locally)
      - type: bind  # Bind mount (this is how you mount a directory from the host to the container)
        source: /DATA/AppData/$AppID/assets  # Source directory (this is where the application assets will be stored locally)
        target: /flarum/app/public/assets  # Target directory (this is where the application assets will be stored inside the container)
      - type: bind  # Bind mount (this is how you mount a directory from the host to the container)
        source: /DATA/AppData/$AppID/extensions  # Source directory (this is where the application extensions will be stored locally)
        target: /flarum/app/extensions  # Target directory (this is where the application extensions will be stored inside the container)
      - type: bind  # Bind mount (this is how you mount a directory from the host to the container)
        source: /DATA/AppData/$AppID/storage/logs  # Source directory (this is where the application logs will be stored locally)
        target: /flarum/app/storage/logs  # Target directory (this is where the application logs will be stored inside the container)
      - type: bind  # Bind mount (this is how you mount a directory from the host to the container)
        source: /DATA/AppData/$AppID/nginx  # Source directory (this is the nginx config for the app) (this is non optional)
        target: /etc/nginx/flarum  # Target directory (this is the nginx config for the app) (this is non optional)
    network_mode: bridge  # Network mode (bridge is default) (this is the network mode that will be used by the container)
    privileged: false  # Privileged mode (true or false) (this is the privileged mode that will be used by the container)

  mariadb:  # Name of the container (this is to create a database for the application)
    container_name: mariadb  # Name of the container (this is the name that will be used to access the container)
    environment:  # Environment variables (this is the database configuration)
      - MYSQL_DATABASE=flarum  # Database name (this is the database that will be used by the application)
      - MYSQL_PASSWORD=db-password  # Database password (this is the password that will be used to access the database)
      - MYSQL_ROOT_PASSWORD=db-root-password  # Database root password (this is the password that will be used to access the database)
      - MYSQL_USER=flarum  # Database user (this is the user that will be used to access the database)
    image: mariadb:10.5  # Image to use (this is the image that will be used to create the container)
    ports:  # Ports to expose (this defines ports for the container)
      - target: 3306  # Port inside the container (this is the port that will be used to access the application inside the container)
        published: "3306"  # Port on the host (this is the port that will be used to access the application outside the container)
        protocol: tcp  # Protocol TCP or UDP (TCP is default) for UDP add :udp to the end of the port
    restart: unless-stopped  # Restart policy (this is how the container will restart if it crashes)
    volumes:  # Volumes to mount (these are needed to store the database data locally)
      - type: bind  # Bind mount (this is how you mount a directory from the host to the container)
        source: /DATA/AppData/$AppID/mysql/db  # Source directory (this is where the database data will be stored locally)
        target: /var/lib/mysql  # Target directory (this is where the database data will be stored inside the container)
    network_mode: bridge  # Network mode (the same as the application)
    privileged: false  # Privileged mode (true or false)

x-casaos: # CasaOS specific options (required) (has to be at the end of the file for app to work inside CasaOS app store or it will be rejected)
  author: Cloudrack # Author of the app (this is the author and or the organization that created the app)
  category: cms # Category of the app (this is the category where the app will be displayed inside CasaOS app store)
  hostname: 10.0.0.202  # Hostname of the app (IP or domain) (this is the hostname where the app will be accessible publicly)
  icon: https://th.bing.com/th/id/R.af1aea0a6379ac4c47a79dd54981c7a2?rik=quv0Sb69jVtqpA&riu=http%3a%2f%2fassets.stickpng.com%2fthumbs%2f62a37be36209494ec2b17080.png&ehk=Hz4bV9CCt6%2fBVyRoMUkFUEsHnbzqZ4PUaoCCrCNxrpE%3d&risl=&pid=ImgRaw&r=0  # Icon of the app  (URL path)
  index: /  # Index of the app  (URL path)  (this is the path where the app will be accessible)
  port_map: "80"  # Port map of the app (port inside the container) (needs to be created if not 80)
  scheme: http  # Scheme of the app (http or https)
  store_app_id: cloudrack-flarum  # Store app ID of the app (must be unique)
  title:  # Title of the app  (name of the app)
    custom: flarum  # Custom title of the app (name of the app)
  architectures:  # Architectures supported by the app (App will be hidden if the architecture is not supported)
    - amd64 # Architecture (amd64)
    - arm64 # Architecture (arm64)
    - arm # Architecture (armv7)
    
